{"version":3,"sources":["webpack:///./src/modules/home/home.tsx"],"names":["SubPage","HomeDetails","props","useState","Languages","fr","lang","setLang","window","useWindowDimensions","width","height","getSizes","imageSize","fontSizeDescription","fontSizeTitle","title","getText","xs","lg","md","style","textAlign","href","onClick","ptBr","en","langBtnText","size","fontSize","catch_phrase","card1Link","card1Title","card1","card2Link","card2Title","card2","card3Link","card3Title","card3","card4Link","card4Title","card4","Math","max"],"mappings":"4FAAA,mDAcYA,EAdZ,4K,SAcYA,O,eAAAA,I,6BAAAA,I,oBAAAA,M,KAsFGC,UAhF8B,SAAAC,GAAS,MAC7BC,mBAASC,IAAUC,IAApCC,EAD8C,KACxCC,EADwC,KAUrD,KADoC,oBAAXC,QACT,OAAO,qCAV8B,MAW7BC,cAAjBC,EAX8C,EAW9CA,MAAOC,EAXuC,EAWvCA,OAXuC,EAaGC,EAASF,EAAOC,GAAjEE,EAb8C,EAa9CA,UAAWC,EAbmC,EAanCA,oBAAqBC,EAbc,EAadA,cAC/BC,EAuFT,SAAiBN,EAAeC,GAC/B,IAAIK,EAAgB,2BAEjBN,GAAS,MACXM,EAAQ,cAGT,MAAO,CAAEA,SA9FSC,CAAQP,GAAlBM,MAER,OACC,kBAAC,IAAD,KACC,kBAAC,IAAD,KACC,kBAAC,IAAD,KACC,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAKE,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACtB,kBAAC,IAAD,CAAWC,MAAO,CAAEC,UAAW,UAC9B,kBAAC,IAAD,CAAMC,KAAM,IAAKC,QAAS,kBAnB7BlB,GAAQF,IAAUqB,MAAKlB,EAAQH,IAAUC,IACzCC,GAAQF,IAAUC,IAAGE,EAAQH,IAAUsB,SACvCpB,GAAQF,IAAUsB,IAAGnB,EAAQH,IAAUqB,SAkBlCE,IAAYrB,KAGf,kBAAC,IAAD,CAAiBsB,KAAMf,IACvB,kBAAC,IAAD,CAAOgB,SAAUd,GAAgBC,GACjC,kBAAC,IAAD,CAAaa,SAAUf,GACrBgB,IAAaxB,IAEf,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAMiB,KAAMQ,KACX,kBAAC,IAAD,CAAWF,SAAS,SAClBG,IAAW1B,IAEb,kBAAC,IAAD,CAAiBuB,SAAS,SACxBI,IAAM3B,KAGT,kBAAC,IAAD,CAAMiB,KAAMW,KACX,kBAAC,IAAD,CAAWL,SAAS,SAClBM,IAAW7B,IAEb,kBAAC,IAAD,CAAiBuB,SAAS,SACxBO,IAAM9B,KAGT,kBAAC,IAAD,CAAMiB,KAAMc,KACX,kBAAC,IAAD,CAAWR,SAAS,SAClBS,IAAWhC,IAEb,kBAAC,IAAD,CAAiBuB,SAAS,SACxBU,IAAMjC,KAGT,kBAAC,IAAD,CAAMiB,KAAMiB,KACX,kBAAC,IAAD,CAAWX,SAAS,SAClBY,IAAWnC,IAEb,kBAAC,IAAD,CAAiBuB,SAAS,SACxBa,IAAMpC,YAmBjB,IAAMM,EAAW,SAACF,EAAeC,GAEhC,IAAIE,EAAoB8B,KAAKC,IAAI,GAAIlC,EAAO,KACxCI,EAA6B,QAC7BC,EAAuB,QAQ3B,OANGL,GAAS,MACXG,EAAY,IACZC,EAAsB,MACtBC,EAAgB,OAGV,CAACF,YAAWC,sBAAqBC","file":"22-ed14b693f7e927be8e2a.js","sourcesContent":["import { Col, Row } from \"antd\";\nimport Grid from \"antd/lib/card/Grid\";\nimport Layout from \"antd/lib/layout/layout\";\nimport React, { useState } from \"react\";\nimport { Content } from \"../../components/atm.content/content\";\nimport { JoseImageStyled } from \"./home-page-image\";\nimport { Link } from \"../../components/atm.link/link\";\nimport { Paragraph } from \"../../components/atm.paragraph/paragraph\";\nimport { Languages, introduction, initialPage, langBtnText, catch_phrase, card1Title, card1, card2, card2Title, card3Title, card3, card4, card4Title, card1Link, card2Link, card3Link, card4Link, card5, card5Link, card5Title, card6, card6Link, card6Title, card7, card7Link, card7Title, card8, card8Link, card8Title, card10, card10Link, card10Title, card9, card9Link, card9Title} from \"./texts\";\nimport { Title, Description, Card, CardGrid, CardTitle, CardDescription, CardSpinWrapper } from \"./home.style\";\nimport useWindowDimensions from \"../../utils/hooks/use-window-dimension.hook\";\nimport { PageSpin, Spin } from \"../../components/atm.spin/spin\";\n\n\nexport enum SubPage {\n\tHome,\n\tSimulations,\n\tRandom\n}\n\nconst HomeDetails: React.FunctionComponent = props => {\n\tconst [lang, setLang] = useState(Languages.fr);\n\n\tconst changeLang = () => {\n\t\tif(lang == Languages.ptBr)setLang(Languages.fr);\n\t\tif(lang == Languages.fr)setLang(Languages.en);\n\t\tif(lang == Languages.en)setLang(Languages.ptBr);\n\t}\n\n\tconst isBrowser = typeof window !== \"undefined\";\n\tif (!isBrowser) return <></>;\n\tconst {width, height} = useWindowDimensions();\n\t\n\tconst {imageSize, fontSizeDescription, fontSizeTitle} = getSizes(width, height);\n\tconst { title } = getText(width, height);\n\n\treturn (\n\t\t<Layout>\n\t\t\t<Content>\n\t\t\t\t<Grid>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col xs={4} lg={4} md={4}>\n\t\t\t\t\t\t\t<Paragraph style={{ textAlign: \"right\" }}>\n\t\t\t\t\t\t\t\t<Link href={\"#\"} onClick={() => changeLang()}>\n\t\t\t\t\t\t\t\t\t{langBtnText[lang]}\n\t\t\t\t\t\t\t\t</Link>\t\n\t\t\t\t\t\t\t</Paragraph>\n\t\t\t\t\t\t\t<JoseImageStyled size={imageSize} />\n\t\t\t\t\t\t\t<Title fontSize={fontSizeTitle}>{title}</Title>\n\t\t\t\t\t\t\t<Description fontSize={fontSizeDescription}>\n\t\t\t\t\t\t\t\t{catch_phrase[lang]}\t\n\t\t\t\t\t\t\t</Description>\n\t\t\t\t\t\t\t<CardGrid>\n\t\t\t\t\t\t\t\t<Card href={card1Link}>\n\t\t\t\t\t\t\t\t\t<CardTitle fontSize=\"1.3em\">\n\t\t\t\t\t\t\t\t\t\t{card1Title[lang]}\n\t\t\t\t\t\t\t\t\t</CardTitle>\n\t\t\t\t\t\t\t\t\t<CardDescription fontSize=\"1.3em\">\n\t\t\t\t\t\t\t\t\t\t{card1[lang]}\n\t\t\t\t\t\t\t\t\t</CardDescription>\n\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t\t<Card href={card2Link}>\n\t\t\t\t\t\t\t\t\t<CardTitle fontSize=\"1.3em\">\n\t\t\t\t\t\t\t\t\t\t{card2Title[lang]}\n\t\t\t\t\t\t\t\t\t</CardTitle>\n\t\t\t\t\t\t\t\t\t<CardDescription fontSize=\"1.3em\">\n\t\t\t\t\t\t\t\t\t\t{card2[lang]}\n\t\t\t\t\t\t\t\t\t</CardDescription>\n\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t\t<Card href={card3Link}>\n\t\t\t\t\t\t\t\t\t<CardTitle fontSize=\"1.3em\">\n\t\t\t\t\t\t\t\t\t\t{card3Title[lang]}\n\t\t\t\t\t\t\t\t\t</CardTitle>\n\t\t\t\t\t\t\t\t\t<CardDescription fontSize=\"1.3em\">\n\t\t\t\t\t\t\t\t\t\t{card3[lang]}\n\t\t\t\t\t\t\t\t\t</CardDescription>\n\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t\t<Card href={card4Link}>\n\t\t\t\t\t\t\t\t\t<CardTitle fontSize=\"1.3em\">\n\t\t\t\t\t\t\t\t\t\t{card4Title[lang]}\n\t\t\t\t\t\t\t\t\t</CardTitle>\n\t\t\t\t\t\t\t\t\t<CardDescription fontSize=\"1.3em\">\n\t\t\t\t\t\t\t\t\t\t{card4[lang]}\n\t\t\t\t\t\t\t\t\t</CardDescription>\n\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t</CardGrid>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Grid>\n\t\t\t</Content>\n\t\t</Layout>\n\t);\n};\n\nexport interface GetSizesReturn { \n\timageSize: number; \n\tfontSizeDescription: string; \n\tfontSizeTitle: string;\n}\n\nexport default HomeDetails;\nconst getSizes = (width: number, height:number):GetSizesReturn => {\n\n\tlet imageSize: number = Math.max(0.1*width, 150);\n\tlet fontSizeDescription:string = '1.3em';\n\tlet fontSizeTitle:string = '3.5em';\n\n\tif(width <= 940){\n\t\timageSize = 150;\n\t\tfontSizeDescription = '1em'; \n\t\tfontSizeTitle = '2em';\n\t}\n\n\treturn {imageSize, fontSizeDescription, fontSizeTitle}\n}\n\ninterface GetTextsReturn {\n\ttitle: string; \n}\n\n\nfunction getText(width: number, height: number): GetTextsReturn {\n\tlet title: string = 'José Lucas De Melo Costa';\n\n\tif(width <= 940){\n\t\ttitle = 'José Costa'; \n\t}\n\n\treturn { title };\n}\n\n"],"sourceRoot":""}