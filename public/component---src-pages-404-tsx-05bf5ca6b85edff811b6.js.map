{"version":3,"sources":["webpack:///./src/pages/404.tsx","webpack:///./src/modules/home/home.tsx"],"names":["getSizes","width","height","imageSize","Math","max","fontSizeDescription","fontSizeTitle","NotFoundPage","props","React","Languages","fr","lang","setLang","SubPage","Home","window","useWindowDimensions","console","log","title","getText","xs","lg","md","style","textAlign","href","onClick","ptBr","en","langBtnText","size","fontSize","HomeDetails","useState","catch_phrase","card1Link","card1Title","card1","card2Link","card2Title","card2","card3Link","card3Title","card3","card4Link","card4Title","card4"],"mappings":"gGAAA,yLA0DMA,EAAW,SAACC,EAAeC,GAEhC,IAAIC,EAAoBC,KAAKC,IAAI,GAAIJ,EAAO,KACxCK,EAA6B,QAC7BC,EAAuB,QAQ3B,OANGN,GAAS,MACXE,EAAY,IACZG,EAAsB,MACtBC,EAAgB,OAGV,CAACJ,YAAWG,sBAAqBC,kBAkB1BC,UAxE+B,SAAAC,GAAS,MAC9BC,WAAeC,IAAUC,IAA1CC,EAD+C,KACzCC,EADyC,OAExBJ,WAAeK,UAAQC,MAFC,UAWtD,KADoC,oBAAXC,QACT,OAAO,iCAX+B,MAY9BC,cAAjBjB,EAZ+C,EAY/CA,MAAOC,EAZwC,EAYxCA,OAEdiB,QAAQC,IAAI,SAAUnB,EAAO,UAAWC,GAdc,MAgBEF,EAASC,EAAOC,GAAjEC,EAhB+C,EAgB/CA,UAAWG,EAhBoC,EAgBpCA,oBAhBoC,EAgBfC,cA8CxC,SAAiBN,EAAeC,GAC/B,IAAImB,EAAgB,2BAEjBpB,GAAS,MACXoB,EAAQ,cAGT,MAAO,CAAEA,SApDSC,CAAQrB,GAAlBoB,MAER,OACC,gBAAC,IAAD,KACC,gBAAC,IAAD,KACC,gBAAC,IAAD,KACC,gBAAC,IAAD,KACC,gBAAC,IAAD,CAAKE,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACtB,gBAAC,IAAD,CAAWC,MAAO,CAAEC,UAAW,UAC9B,gBAAC,IAAD,CAAMC,KAAM,IAAKC,QAAS,kBArB7BhB,GAAQF,IAAUmB,MAAKhB,EAAQH,IAAUC,IACzCC,GAAQF,IAAUC,IAAGE,EAAQH,IAAUoB,SACvClB,GAAQF,IAAUoB,IAAGjB,EAAQH,IAAUmB,SAoBlCE,IAAYnB,KAGf,gBAAC,IAAD,CAAiBoB,KAAM9B,IACvB,gBAAC,IAAD,CAAa+B,SAAU5B,GAAvB,yB,kCC/CP,mDAcYS,EAdZ,4K,SAcYA,O,eAAAA,I,6BAAAA,I,oBAAAA,M,KAsFGoB,UAhF8B,SAAA1B,GAAS,MAC7B2B,mBAASzB,IAAUC,IAApCC,EAD8C,KACxCC,EADwC,KAUrD,KADoC,oBAAXG,QACT,OAAO,qCAV8B,MAW7BC,cAAjBjB,EAX8C,EAW9CA,MAAOC,EAXuC,EAWvCA,OAXuC,EAaGF,EAASC,EAAOC,GAAjEC,EAb8C,EAa9CA,UAAWG,EAbmC,EAanCA,oBAAqBC,EAbc,EAadA,cAC/Bc,EAuFT,SAAiBpB,EAAeC,GAC/B,IAAImB,EAAgB,2BAEjBpB,GAAS,MACXoB,EAAQ,cAGT,MAAO,CAAEA,SA9FSC,CAAQrB,GAAlBoB,MAER,OACC,kBAAC,IAAD,KACC,kBAAC,IAAD,KACC,kBAAC,IAAD,KACC,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAKE,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACtB,kBAAC,IAAD,CAAWC,MAAO,CAAEC,UAAW,UAC9B,kBAAC,IAAD,CAAMC,KAAM,IAAKC,QAAS,kBAnB7BhB,GAAQF,IAAUmB,MAAKhB,EAAQH,IAAUC,IACzCC,GAAQF,IAAUC,IAAGE,EAAQH,IAAUoB,SACvClB,GAAQF,IAAUoB,IAAGjB,EAAQH,IAAUmB,SAkBlCE,IAAYnB,KAGf,kBAAC,IAAD,CAAiBoB,KAAM9B,IACvB,kBAAC,IAAD,CAAO+B,SAAU3B,GAAgBc,GACjC,kBAAC,IAAD,CAAaa,SAAU5B,GACrB+B,IAAaxB,IAEf,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAMe,KAAMU,KACX,kBAAC,IAAD,CAAWJ,SAAS,SAClBK,IAAW1B,IAEb,kBAAC,IAAD,CAAiBqB,SAAS,SACxBM,IAAM3B,KAGT,kBAAC,IAAD,CAAMe,KAAMa,KACX,kBAAC,IAAD,CAAWP,SAAS,SAClBQ,IAAW7B,IAEb,kBAAC,IAAD,CAAiBqB,SAAS,SACxBS,IAAM9B,KAGT,kBAAC,IAAD,CAAMe,KAAMgB,KACX,kBAAC,IAAD,CAAWV,SAAS,SAClBW,IAAWhC,IAEb,kBAAC,IAAD,CAAiBqB,SAAS,SACxBY,IAAMjC,KAGT,kBAAC,IAAD,CAAMe,KAAMmB,KACX,kBAAC,IAAD,CAAWb,SAAS,SAClBc,IAAWnC,IAEb,kBAAC,IAAD,CAAiBqB,SAAS,SACxBe,IAAMpC,YAmBjB,IAAMb,EAAW,SAACC,EAAeC,GAEhC,IAAIC,EAAoBC,KAAKC,IAAI,GAAIJ,EAAO,KACxCK,EAA6B,QAC7BC,EAAuB,QAQ3B,OANGN,GAAS,MACXE,EAAY,IACZG,EAAsB,MACtBC,EAAgB,OAGV,CAACJ,YAAWG,sBAAqBC","file":"component---src-pages-404-tsx-05bf5ca6b85edff811b6.js","sourcesContent":["/* eslint-disable no-unused-vars */\nimport { Col, Row } from \"antd\";\nimport Grid from \"antd/lib/card/Grid\";\nimport Layout from \"antd/lib/layout/layout\";\nimport * as React from \"react\";\nimport { Content } from \"../components/atm.content/content\";\nimport { Link } from \"../components/atm.link/link\";\nimport { Paragraph } from \"../components/atm.paragraph/paragraph\";\n\nimport SEO from \"../components/atm.seo/seo\";\nimport { GetSizesReturn, SubPage } from \"../modules/home/home\";\nimport JoseImageStyled from \"../modules/home/home-page-image\";\nimport { Description, CardGrid, CardTitle, CardDescription, Title } from \"../modules/home/home.style\";\nimport { Languages, langBtnText, catch_phrase, card1Link, card1Title, card1, card2Link, card2Title, card2, card3Link, card3Title, card3, card4Link, card4Title, card4 } from \"../modules/home/texts\";\nimport useWindowDimensions from \"../utils/hooks/use-window-dimension.hook\";\n\nconst NotFoundPage: React.FunctionComponent = props => {\n\tconst [lang, setLang] = React.useState(Languages.fr);\n\tconst [subPage, setSubPage] = React.useState(SubPage.Home);\n\n\tconst changeLang = () => {\n\t\tif(lang == Languages.ptBr)setLang(Languages.fr);\n\t\tif(lang == Languages.fr)setLang(Languages.en);\n\t\tif(lang == Languages.en)setLang(Languages.ptBr);\n\t}\n\n\tconst isBrowser = typeof window !== \"undefined\";\n\tif (!isBrowser) return <></>;\n\tconst {width, height} = useWindowDimensions();\n\t\n\tconsole.log('width ', width, 'height ', height);\n\n\tconst {imageSize, fontSizeDescription, fontSizeTitle} = getSizes(width, height);\n\tconst { title } = getText(width, height);\n\n\treturn (\n\t\t<Layout>\n\t\t\t<Content>\n\t\t\t\t<Grid>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col xs={4} lg={4} md={4}>\n\t\t\t\t\t\t\t<Paragraph style={{ textAlign: \"right\" }}>\n\t\t\t\t\t\t\t\t<Link href={\"#\"} onClick={() => changeLang()}>\n\t\t\t\t\t\t\t\t\t{langBtnText[lang]}\n\t\t\t\t\t\t\t\t</Link>\t\n\t\t\t\t\t\t\t</Paragraph>\n\t\t\t\t\t\t\t<JoseImageStyled size={imageSize} />\n\t\t\t\t\t\t\t<Description fontSize={fontSizeDescription}>\n\t\t\t\t\t\t\t\tPage not Found\n\t\t\t\t\t\t\t</Description>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Grid>\n\t\t\t</Content>\n\t\t</Layout>\n\t);\n};\n\nconst getSizes = (width: number, height:number):GetSizesReturn => {\n\n\tlet imageSize: number = Math.max(0.1*width, 150);\n\tlet fontSizeDescription:string = '1.3em';\n\tlet fontSizeTitle:string = '3.5em';\n\n\tif(width <= 940){\n\t\timageSize = 150;\n\t\tfontSizeDescription = '1em'; \n\t\tfontSizeTitle = '2em';\n\t}\n\n\treturn {imageSize, fontSizeDescription, fontSizeTitle}\n}\n\ninterface GetTextsReturn {\n\ttitle: string; \n}\n\n\nfunction getText(width: number, height: number): GetTextsReturn {\n\tlet title: string = 'José Lucas De Melo Costa';\n\n\tif(width <= 940){\n\t\ttitle = 'José Costa'; \n\t}\n\n\treturn { title };\n}\n\nexport default NotFoundPage;\n\n","import { Col, Row } from \"antd\";\nimport Grid from \"antd/lib/card/Grid\";\nimport Layout from \"antd/lib/layout/layout\";\nimport React, { useState } from \"react\";\nimport { Content } from \"../../components/atm.content/content\";\nimport { JoseImageStyled } from \"./home-page-image\";\nimport { Link } from \"../../components/atm.link/link\";\nimport { Paragraph } from \"../../components/atm.paragraph/paragraph\";\nimport { Languages, introduction, initialPage, langBtnText, catch_phrase, card1Title, card1, card2, card2Title, card3Title, card3, card4, card4Title, card1Link, card2Link, card3Link, card4Link, card5, card5Link, card5Title, card6, card6Link, card6Title, card7, card7Link, card7Title, card8, card8Link, card8Title, card10, card10Link, card10Title, card9, card9Link, card9Title} from \"./texts\";\nimport { Title, Description, Card, CardGrid, CardTitle, CardDescription, CardSpinWrapper } from \"./home.style\";\nimport useWindowDimensions from \"../../utils/hooks/use-window-dimension.hook\";\nimport { PageSpin, Spin } from \"../../components/atm.spin/spin\";\n\n\nexport enum SubPage {\n\tHome,\n\tSimulations,\n\tRandom\n}\n\nconst HomeDetails: React.FunctionComponent = props => {\n\tconst [lang, setLang] = useState(Languages.fr);\n\n\tconst changeLang = () => {\n\t\tif(lang == Languages.ptBr)setLang(Languages.fr);\n\t\tif(lang == Languages.fr)setLang(Languages.en);\n\t\tif(lang == Languages.en)setLang(Languages.ptBr);\n\t}\n\n\tconst isBrowser = typeof window !== \"undefined\";\n\tif (!isBrowser) return <></>;\n\tconst {width, height} = useWindowDimensions();\n\t\n\tconst {imageSize, fontSizeDescription, fontSizeTitle} = getSizes(width, height);\n\tconst { title } = getText(width, height);\n\n\treturn (\n\t\t<Layout>\n\t\t\t<Content>\n\t\t\t\t<Grid>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col xs={4} lg={4} md={4}>\n\t\t\t\t\t\t\t<Paragraph style={{ textAlign: \"right\" }}>\n\t\t\t\t\t\t\t\t<Link href={\"#\"} onClick={() => changeLang()}>\n\t\t\t\t\t\t\t\t\t{langBtnText[lang]}\n\t\t\t\t\t\t\t\t</Link>\t\n\t\t\t\t\t\t\t</Paragraph>\n\t\t\t\t\t\t\t<JoseImageStyled size={imageSize} />\n\t\t\t\t\t\t\t<Title fontSize={fontSizeTitle}>{title}</Title>\n\t\t\t\t\t\t\t<Description fontSize={fontSizeDescription}>\n\t\t\t\t\t\t\t\t{catch_phrase[lang]}\t\n\t\t\t\t\t\t\t</Description>\n\t\t\t\t\t\t\t<CardGrid>\n\t\t\t\t\t\t\t\t<Card href={card1Link}>\n\t\t\t\t\t\t\t\t\t<CardTitle fontSize=\"1.3em\">\n\t\t\t\t\t\t\t\t\t\t{card1Title[lang]}\n\t\t\t\t\t\t\t\t\t</CardTitle>\n\t\t\t\t\t\t\t\t\t<CardDescription fontSize=\"1.3em\">\n\t\t\t\t\t\t\t\t\t\t{card1[lang]}\n\t\t\t\t\t\t\t\t\t</CardDescription>\n\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t\t<Card href={card2Link}>\n\t\t\t\t\t\t\t\t\t<CardTitle fontSize=\"1.3em\">\n\t\t\t\t\t\t\t\t\t\t{card2Title[lang]}\n\t\t\t\t\t\t\t\t\t</CardTitle>\n\t\t\t\t\t\t\t\t\t<CardDescription fontSize=\"1.3em\">\n\t\t\t\t\t\t\t\t\t\t{card2[lang]}\n\t\t\t\t\t\t\t\t\t</CardDescription>\n\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t\t<Card href={card3Link}>\n\t\t\t\t\t\t\t\t\t<CardTitle fontSize=\"1.3em\">\n\t\t\t\t\t\t\t\t\t\t{card3Title[lang]}\n\t\t\t\t\t\t\t\t\t</CardTitle>\n\t\t\t\t\t\t\t\t\t<CardDescription fontSize=\"1.3em\">\n\t\t\t\t\t\t\t\t\t\t{card3[lang]}\n\t\t\t\t\t\t\t\t\t</CardDescription>\n\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t\t<Card href={card4Link}>\n\t\t\t\t\t\t\t\t\t<CardTitle fontSize=\"1.3em\">\n\t\t\t\t\t\t\t\t\t\t{card4Title[lang]}\n\t\t\t\t\t\t\t\t\t</CardTitle>\n\t\t\t\t\t\t\t\t\t<CardDescription fontSize=\"1.3em\">\n\t\t\t\t\t\t\t\t\t\t{card4[lang]}\n\t\t\t\t\t\t\t\t\t</CardDescription>\n\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t</CardGrid>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Grid>\n\t\t\t</Content>\n\t\t</Layout>\n\t);\n};\n\nexport interface GetSizesReturn { \n\timageSize: number; \n\tfontSizeDescription: string; \n\tfontSizeTitle: string;\n}\n\nexport default HomeDetails;\nconst getSizes = (width: number, height:number):GetSizesReturn => {\n\n\tlet imageSize: number = Math.max(0.1*width, 150);\n\tlet fontSizeDescription:string = '1.3em';\n\tlet fontSizeTitle:string = '3.5em';\n\n\tif(width <= 940){\n\t\timageSize = 150;\n\t\tfontSizeDescription = '1em'; \n\t\tfontSizeTitle = '2em';\n\t}\n\n\treturn {imageSize, fontSizeDescription, fontSizeTitle}\n}\n\ninterface GetTextsReturn {\n\ttitle: string; \n}\n\n\nfunction getText(width: number, height: number): GetTextsReturn {\n\tlet title: string = 'José Lucas De Melo Costa';\n\n\tif(width <= 940){\n\t\ttitle = 'José Costa'; \n\t}\n\n\treturn { title };\n}\n\n"],"sourceRoot":""}